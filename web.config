<configuration>
    <appSettings>
        <add key="SENDGRID_KEY" value="Dm5FaSiqkVKojpgTfGhPff4abVPyf3GC"/>
        <add key="MASTER_KEY" value="Dm5FaSiqkVKojpgTfGhPff4abVPyf3GC"/>
        <add key="JWT_SECRET" value="Dm5FaSiqkVKojpgTfGhPff4abVPyf3GC"/>
        <add key="AZURE_STORAGE_CONNECTION_STRING" value=""/>
    </appSettings>
     <system.webServer>
          <handlers>
               <!-- indicates that the app.js file is a node.js application to be handled by the iisnode module -->
               <add name="iisnode" path="index.js" verb="*" modules="iisnode"/>
          </handlers>
          <rewrite>
               <rules>

                    <!-- Don't interfere with requests for node-inspector debugging -->
                    <rule name="NodeInspector" patternSyntax="ECMAScript" stopProcessing="true">                    
                        <match url="^index.js\/debug[\/]?" />
                    </rule>

                    <!-- First we consider whether the incoming URL matches a physical file in the /public folder -->
                    <rule name="StaticContent">
                         <action type="Rewrite" url="public{REQUEST_URI}"/>
                    </rule>

                    <!-- All other URLs are mapped to the Node.js application entry point -->
                    <rule name="DynamicContent">
                         <conditions>
                              <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True"/>
                         </conditions>
                         <action type="Rewrite" url="index.js"/>
                    </rule>

               </rules>
          </rewrite>
          <!-- Make sure error responses are left untouched -->
        <httpErrors existingResponse="PassThrough" />
            <!-- You can control how Node is hosted within IIS using the following options -->
            <iisnode watchedFiles="web.config;*.js" nodeProcessCommandLine="D:\home\site\wwwroot\runtime\node.exe"/>
     </system.webServer>
</configuration>